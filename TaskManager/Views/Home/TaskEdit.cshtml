@model TaskManager.Models.EditTaskViewModel

@{
    Layout = null;
}


@using (Html.BeginForm("TaskEdit", "Home", null, FormMethod.Post, new { @id = "myForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TaskTypeId, ViewBag.TaskTypes as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaskTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskPriorityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TaskPriorityId, ViewBag.TaskPriorities as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaskPriorityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserId, ViewBag.TaskUser as List<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TaskStatusId, ViewBag.TaskStatuses as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaskStatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskClose, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.TaskClose)
                </div>
            </div>
        </div>

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ProjectId)
        @Html.HiddenFor(model => model.DateClose)
        @Html.HiddenFor(model => model.DateCreate)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Изменить" class="btn btn-default" />
            </div>
        </div>
    </div>
}
